name: CI
on: [push, pull_request]

env:
  THREADS: 4
  CONFIG: RelWithDebInfo

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.11
      with:
        exclude: './thirdparty'
        clangFormatVersion: 11

  amalgamation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: clone amalgamate
      uses: actions/checkout@v2
      with:
        repository: shrpnsld/amalgamate
        path: build/amalgamate
    - name: amalgamation
      run: |
        cd include/llama
        ../../build/amalgamate/amalgamate -o ../../build -H
    - name: upload llama.hpp
      uses: actions/upload-artifact@v2
      with:
        name: llama.hpp
        path: build/llama-amalgamated/llama.hpp

  build-ubuntu-gcc9-cuda:
    env:
      CUDA_INSTALLER: cuda_11.1.1_455.32.00_linux.run
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: vcpkg install dependencies
      run: |
        vcpkg install catch2 fmt tbb tinyobjloader
    - name: cache CUDA 11
      id: cache-cude
      uses: actions/cache@v2
      with:
        path: ${{env.CUDA_INSTALLER}}
        key: ${{env.CUDA_INSTALLER}}
    - name: install CUDA 11
      if: steps.cache-cuda.outputs.cache-hit != 'true'
      run: |
        wget --no-verbose https://developer.download.nvidia.com/compute/cuda/11.1.1/local_installers/$CUDA_INSTALLER
        sudo sh $CUDA_INSTALLER --silent --toolkit
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        export BOOST_ROOT=$BOOST_ROOT_1_72_0
        cmake .. -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: install Vc
      run: |
        git clone https://github.com/VcDevel/Vc.git
        mkdir Vc/build
        cd Vc/build
        cmake .. -DBUILD_TESTING=OFF -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: cmake
      run: |
        mkdir build
        cd build
        export BOOST_ROOT=$BOOST_ROOT_1_72_0
        CXX=g++-9 cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DASAN_FOR_TESTS=ON -DALPAKA_CXX_STANDARD=17 -DALPAKA_ACC_GPU_CUDA_ENABLE=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: build tests + examples
      run: cmake --build build -j $THREADS
    - name: run tests
      run: build/tests

  build-ubuntu-gcc10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: vcpkg install dependencies
      run: |
        vcpkg install catch2 fmt tinyobjloader
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        export BOOST_ROOT=$BOOST_ROOT_1_72_0
        cmake .. -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: install Vc
      run: |
        git clone https://github.com/VcDevel/Vc.git
        mkdir Vc/build
        cd Vc/build
        cmake .. -DBUILD_TESTING=OFF -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: cmake
      run: |
        mkdir build
        cd build
        export BOOST_ROOT=$BOOST_ROOT_1_72_0
        CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DASAN_FOR_TESTS=ON -DALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: build tests + examples
      run: cmake --build build -j $THREADS
    - name: run tests
      run: build/tests

  build-windows:
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
    - uses: actions/checkout@v2
    - name: install vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        setupOnly: true
        vcpkgGitCommitId: 76a7e9248fb3c57350b559966dcaa2d52a5e4458
    - name: vcpkg install dependencies
      run: |
        & $env:VCPKG_ROOT/vcpkg install catch2 fmt tinyobjloader
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        $env:BOOST_ROOT = $env:BOOST_ROOT_1_72_0
        cmake .. "-DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
        cmake --build . --target install --config $env:CONFIG
# Vc does not currently compile with MSVC
#    - name: install Vc
#      run: |
#        git clone https://github.com/VcDevel/Vc.git
#        mkdir Vc/build
#        cd Vc/build
#        cmake .. -DBUILD_TESTING=OFF "-DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
#        cmake --build . --target install --config $env:CONFIG
    - name: cmake
      run: |
        mkdir build
        cd build
        $env:BOOST_ROOT = $env:BOOST_ROOT_1_72_0
        cmake .. -DALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE=ON "-DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
    - name: build tests + examples
      run: cmake --build build -j $env:THREADS --config $env:CONFIG
    - name: run tests
      run: |
        & build/$env:CONFIG/tests
