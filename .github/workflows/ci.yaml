name: CI
on: [push, pull_request]

env:
  THREADS: 4
  CONFIG: RelWithDebInfo

jobs:
  clang-format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.11
      with:
        exclude: './thirdparty'
        clangFormatVersion: 11

  amalgamation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: clone amalgamate
      uses: actions/checkout@v2
      with:
        repository: shrpnsld/amalgamate
        path: build/amalgamate
    - name: amalgamation
      run: |
        cd include/llama
        ../../build/amalgamate/amalgamate -o ../../build -H
    - name: upload llama.hpp
      uses: actions/upload-artifact@v2
      with:
        name: llama.hpp
        path: build/llama-amalgamated/llama.hpp

  build-ubuntu-gcc9-cuda:
    env:
      CUDA_INSTALLER: cuda_11.2.0_460.27.04_linux.run
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install boost
      run: |
        sudo apt update
        sudo apt install libboost-all-dev
    - name: vcpkg install dependencies
      run: |
        vcpkg install catch2 fmt tbb vc
    - name: download CUDA 11
      run: |
        wget --no-verbose https://developer.download.nvidia.com/compute/cuda/11.2.0/local_installers/$CUDA_INSTALLER
    - name: install CUDA 11
      run: |
        sudo sh $CUDA_INSTALLER --silent --toolkit
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: cmake
      run: |
        mkdir build
        cd build
        CXX=g++-9 cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DASAN_FOR_TESTS=ON -DALPAKA_CXX_STANDARD=17 -DALPAKA_ACC_GPU_CUDA_ENABLE=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: build tests + examples
      run: cmake --build build -j $THREADS
    - name: run tests
      run: build/tests

  build-ubuntu-gcc10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install boost
      run: |
        sudo apt update
        sudo apt install libboost-all-dev
    - name: vcpkg install dependencies
      run: |
        vcpkg install catch2 fmt vc
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: cmake
      run: |
        mkdir build
        cd build
        CXX=g++-10 cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DASAN_FOR_TESTS=ON -DALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: build tests + examples
      run: cmake --build build -j $THREADS
    - name: run tests
      run: build/tests

  build-ubuntu-clang10:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install boost
      run: |
        sudo apt update
        sudo apt install libboost-all-dev
    - name: vcpkg install dependencies
      run: |
        vcpkg install catch2 fmt vc
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: cmake
      run: |
        mkdir build
        cd build
        CXX=clang++-10 cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DASAN_FOR_TESTS=ON -DALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: build tests + examples
      run: cmake --build build -j $THREADS
    - name: run tests
      run: build/tests

  build-ubuntu-icpc:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: install icc
      run: |
        wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
        sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
        sudo apt update
        sudo apt install intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic
    - name: install boost
      run: |
        sudo apt update
        sudo apt install libboost-all-dev
    - name: vcpkg install dependencies
      run: |
        vcpkg install catch2 fmt vc
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        cmake .. -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
        sudo cmake --build . --target install
    - name: cmake
      run: |
        mkdir build
        cd build
        source /opt/intel/oneapi/setvars.sh
        CXX=icpc cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE=ON -DCMAKE_TOOLCHAIN_FILE=/usr/local/share/vcpkg/scripts/buildsystems/vcpkg.cmake
    - name: build tests + examples
      run: cmake --build build -j $THREADS
    - name: run tests
      run: build/tests

  build-windows:
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
      BOOST_ROOT: C:\hostedtoolcache\windows\Boost\1.75.0\x86_64
    steps:
    - uses: actions/checkout@v2
    - name: install vcpkg
      uses: lukka/run-vcpkg@v4
      with:
        setupOnly: true
        vcpkgGitCommitId: 76a7e9248fb3c57350b559966dcaa2d52a5e4458
    - name: install boost
      run: |
        # From: https://github.com/actions/virtual-environments/issues/2667
        $url = "https://sourceforge.net/projects/boost/files/boost-binaries/1.75.0/boost_1_75_0-msvc-14.1-64.exe"
        (New-Object System.Net.WebClient).DownloadFile($url, "$env:TEMP\boost.exe")
        Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=$env:BOOST_ROOT"
    - name: vcpkg install dependencies
      run: |
        # Vc does not currently compile with MSVC
        & $env:VCPKG_ROOT/vcpkg install catch2 fmt 
    - name: install alpaka
      run: |
        git clone https://github.com/alpaka-group/alpaka.git
        mkdir alpaka/build
        cd alpaka/build
        cmake .. "-DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
        cmake --build . --target install --config $env:CONFIG
    - name: cmake
      run: |
        mkdir build
        cd build
        cmake .. -DALPAKA_ACC_CPU_B_SEQ_T_SEQ_ENABLE=ON "-DCMAKE_TOOLCHAIN_FILE=$env:VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake"
    - name: build tests + examples
      run: cmake --build build -j $env:THREADS --config $env:CONFIG
    - name: run tests
      run: |
        & build/$env:CONFIG/tests
